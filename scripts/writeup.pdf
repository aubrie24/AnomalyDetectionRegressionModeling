The goal of this assignment was to develop a machine learning model pipeline that predicts the inhibition values of molecules. Our pipeline will handle cleaning of the data, anomaly detection and the best regression model chosen from our test regression models. 

In Phase 3 all columns were converted to numeric format, missing values were imputed and extreme infinite values were capped. The data had mixed types therefore converting all to numeric ensured uniformity. The columns “gmin”, “CID”, and “Name were removed from the training data as they are not included in the unseen data. There were too many missing values to drop entire columns therefore mean imputation was used to handle these missing values. Finally infinite values were capped at 10^9 to avoid computational issues. 

To improve data quality anomaly detection was employed. In this assignment we chose Isolation Forest because it uses random decision trees to detect anomalies. Reading in this method was provided as well as an example therefore was the most familiar technique for us to use.

For model selection three models  were used. Linear Regression was used as a baseline and then compared to the performance of Random Forest and Gradient Boosting. Random Forest and Gradient Boosting handle data with non-linear relationships well therefore was a good option when comparing performance of Linear Regression. The best model was selected based on the resulting MSE from the dev set. The lowest MSE determined our best model. 

Linear Regression was included as a baseline, while Random Forest and Gradient Boosting were chosen due to their ability to handle complex, nonlinear relationships. A pipeline was created that combined the preprocessing steps and the regression model to ensure consistency during both training and testing. The best model was selected based on its MSE, minimizing prediction errors while avoiding overfitting.

To further understand feature importance, models that provided interpretable coefficients (e.g., Random Forest) were analyzed. If a model supported feature importance, the most influential features were saved for further analysis. A check was implemented to ensure that the number of feature names matched the importance values, preventing inconsistencies in reporting results. The best-performing model, along with its full preprocessing pipeline, was saved using `joblib`, ensuring that it could be applied directly to unseen data without requiring separate preprocessing.

The final step of this assignment was to generate the ranked_predictions.csv. To complete this the model pipeline was loaded and the new_molecules.csv was processed through the pipeline following the ame transformations as the training and dev set did. The final predictions were saved to a CSV file with their corresponding inhibition scores. 
